{
  "dxt_version": "0.1",
  "name": "n8n-mcp-server",
  "display_name": "n8n Workflow Automation Server",
  "version": "0.1.8",
  "description": "Model Context Protocol server for n8n workflow automation, enabling AI assistants to create, manage, and execute workflows",
  "long_description": "A comprehensive MCP server that provides seamless integration with n8n workflow automation platform. This extension enables AI assistants to interact with n8n instances to create workflows, manage executions, retrieve credentials, and perform various automation tasks. Supports both cloud and self-hosted n8n instances with robust authentication and error handling.\n\nFeatures:\n- Complete workflow lifecycle management\n- Execution monitoring and control\n- Webhook-based workflow triggers\n- Health monitoring and diagnostics\n- Secure credential handling\n- Resource browsing capabilities\n\nRequires n8n instance with API access enabled.",
  "author": {
    "name": "Leonard Sellem",
    "email": "contact@sellem.me",
    "url": "https://sellem.me"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leonardsellem/n8n-mcp-server.git"
  },
  "homepage": "https://github.com/leonardsellem/n8n-mcp-server#readme",
  "documentation": "https://github.com/leonardsellem/n8n-mcp-server/blob/main/README.md",
  "support": "https://github.com/leonardsellem/n8n-mcp-server/issues",
  "server": {
    "type": "node",
    "entry_point": "server/index.js",
    "mcp_config": {
      "command": "node",
      "args": [
        "${__dirname}/server/index.js"
      ],
      "env": {
        "N8N_API_URL": "${user_config.n8n_api_url}",
        "N8N_API_KEY": "${user_config.n8n_api_key}",
        "N8N_WEBHOOK_USERNAME": "${user_config.n8n_webhook_username}",
        "N8N_WEBHOOK_PASSWORD": "${user_config.n8n_webhook_password}",
        "DEBUG": "${user_config.enable_debug}",
        "REQUEST_TIMEOUT": "${user_config.timeout}",
        "MAX_RESULTS": "${user_config.max_results}"
      }
    }
  },
  "tools": [
    {
      "name": "list_workflows",
      "description": "Retrieve a list of all workflows available in n8n"
    },
    {
      "name": "get_workflow",
      "description": "Retrieve a specific workflow by ID"
    },
    {
      "name": "create_workflow",
      "description": "Create a new workflow in n8n"
    },
    {
      "name": "update_workflow",
      "description": "Update an existing workflow in n8n"
    },
    {
      "name": "delete_workflow",
      "description": "Delete a workflow from n8n"
    },
    {
      "name": "activate_workflow",
      "description": "Activate a workflow in n8n"
    },
    {
      "name": "deactivate_workflow",
      "description": "Deactivate a workflow in n8n"
    },
    {
      "name": "list_executions",
      "description": "Retrieve a list of workflow executions from n8n"
    },
    {
      "name": "get_execution",
      "description": "Retrieve detailed information about a specific workflow execution"
    },
    {
      "name": "delete_execution",
      "description": "Delete a specific workflow execution from n8n"
    },
    {
      "name": "run_webhook",
      "description": "Execute a workflow via webhook with optional input data"
    },
    {
      "name": "health_check",
      "description": "Check n8n instance health and connectivity"
    },
    {
      "name": "list_nodes",
      "description": "Extract and list all nodes from a workflow with their details"
    },
    {
      "name": "get_node",
      "description": "Get detailed information about a specific node in a workflow"
    },
    {
      "name": "update_node",
      "description": "Update a specific node's parameters in a workflow"
    },
    {
      "name": "add_node",
      "description": "Add a new node to an existing workflow"
    },
    {
      "name": "remove_node",
      "description": "Remove a node from a workflow and clean up connections"
    },
    {
      "name": "update_node_connections",
      "description": "Update connections between nodes in a workflow"
    },
    {
      "name": "validate_workflow",
      "description": "Validate a workflow for common issues and best practices"
    },
    {
      "name": "get_workflow_stats",
      "description": "Get execution statistics and performance metrics for a workflow"
    },
    {
      "name": "workflow_thinking",
      "description": "AI-powered deep analysis and problem decomposition for workflow design"
    },
    {
      "name": "workflow_planning",
      "description": "AI-powered workflow implementation planning with step-by-step guidance"
    },
    {
      "name": "workflow_research",
      "description": "AI-powered research for best practices and integration options"
    },
    {
      "name": "workflow_brainstorm",
      "description": "AI-powered creative workflow solution brainstorming"
    },
    {
      "name": "workflow_optimize",
      "description": "AI-powered workflow optimization analysis and recommendations"
    }
  ],
  "user_config": {
    "n8n_api_key": {
      "type": "string",
      "title": "n8n API Key",
      "description": "API key for authenticating with your n8n instance",
      "required": true,
      "sensitive": true
    },
    "n8n_api_url": {
      "type": "string",
      "title": "n8n API URL",
      "description": "Full URL of the n8n API, including /api/v1 (e.g., https://your-n8n.app.n8n.cloud/api/v1 or http://localhost:5678/api/v1)",
      "required": true,
      "default": "http://localhost:5678/api/v1"
    },
    "n8n_webhook_username": {
      "type": "string",
      "title": "Webhook Username",
      "description": "Username for webhook authentication (optional, only if using webhooks with basic auth)",
      "required": false
    },
    "n8n_webhook_password": {
      "type": "string",
      "title": "Webhook Password",
      "description": "Password for webhook authentication (optional, only if using webhooks with basic auth)",
      "required": false,
      "sensitive": true
    },
    "timeout": {
      "type": "number",
      "title": "Request Timeout",
      "description": "Timeout for API requests in milliseconds",
      "required": false,
      "default": 30000,
      "min": 5000,
      "max": 120000
    },
    "max_results": {
      "type": "number",
      "title": "Maximum Results",
      "description": "Maximum number of results to return for list operations",
      "required": false,
      "default": 50,
      "min": 1,
      "max": 500
    },
    "enable_debug": {
      "type": "boolean",
      "title": "Enable Debug Logging",
      "description": "Enable verbose debug logging for troubleshooting",
      "required": false,
      "default": false
    }
  },
  "compatibility": {
    "client": ">=0.10.0",
    "platforms": [
      "darwin",
      "win32",
      "linux"
    ],
    "runtime": {
      "node": ">=20.0.0"
    }
  },
  "keywords": [
    "n8n",
    "workflow",
    "automation",
    "mcp",
    "ai",
    "integration",
    "no-code",
    "api",
    "desktop-extension"
  ]
}